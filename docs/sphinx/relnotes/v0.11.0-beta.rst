..
  # SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
  # SPDX-License-Identifier: Apache-2.0
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  # http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.

.. _v0.11.0-beta:

v0.11.0-beta
============

Release Highlights
------------------

CV-CUDA v0.11.0 includes critical bug fixes alongside the following changes:​

* **New Features**:​

  * Enable NVCV to be built as static library​
  * Improve Python doc generation and structure ​

* **Bug Fixes**:​

  * Update pybind11 2.10.0 to 2.13.1. Fixes rare race conditions with Python garbage collector, adds compatibility with numpy2​

Compatibility and Known Limitations
-----------------------------------
  
* **Pre-existing limitations**:

  * The CvtColor operator incorrectly computes the data location of the second chromaticity channel for conversions that involve YUV(420) semi-planar formats. This issue persists through the current release and we intend to address this bug in CV-CUDA v0.12. We do not recommend using these formats.​

    * Known affected formats:​
      * NVCV_COLOR_YUV2RGB_I420​
      * NVCV_COLOR_RGB2YUV_I420​
      * NVCV_COLOR_YUV2BGR_I420​
      * NVCV_COLOR_BGR2YUV_I420​
      * NVCV_COLOR_YUV2RGBA_I420​
      * NVCV_COLOR_RGBA2YUV_I420​
      * NVCV_COLOR_YUV2BGRA_I420​
      * NVCV_COLOR_BGRA2YUV_I420​
      * NVCV_COLOR_RGB2YUV_I420​
      * NVCV_COLOR_YUV2RGB_YV12​
      * NVCV_COLOR_RGB2YUV_YV12​
      * NVCV_COLOR_YUV2BGR_YV12​
      * NVCV_COLOR_BGR2YUV_YV12​
      * NVCV_COLOR_YUV2RGBA_YV12​
      * NVCV_COLOR_RGBA2YUV_YV12​
      * NVCV_COLOR_YUV2BGRA_YV12​
      * NVCV_COLOR_BGRA2YUV_YV12​
      * NVCV_COLOR_RGB2YUV_YV12​
      * NVCV_COLOR_YUV2GRAY_420​

For the full list, see main README on `CV-CUDA GitHub <https://github.com/CVCUDA/CV-CUDA>`_.

License
-------

CV-CUDA is licensed under the `Apache 2.0 <https://github.com/CVCUDA/CV-CUDA/blob/main/LICENSE.md>`_ license.

Resources
---------

1. `CV-CUDA GitHub <https://github.com/CVCUDA/CV-CUDA>`_
2. `CV-CUDA Increasing Throughput and Reducing Costs for AI-Based Computer Vision with CV-CUDA <https://developer.nvidia.com/blog/increasing-throughput-and-reducing-costs-for-computer-vision-with-cv-cuda/>`_
3. `NVIDIA Announces Microsoft, Tencent, Baidu Adopting CV-CUDA for Computer Vision AI <https://blogs.nvidia.com/blog/2023/03/21/cv-cuda-ai-computer-vision/>`_
4. `CV-CUDA helps Tencent Cloud audio and video PaaS platform achieve full-process GPU acceleration for video enhancement AI <https://developer.nvidia.com/zh-cn/blog/cv-cuda-high-performance-image-processing/>`_

Acknowledgements
----------------

CV-CUDA is developed jointly by NVIDIA and the ByteDance Machine Learning team.

.. [1] These fixes and features add micro-second-level overhead to Python operator calls. Based on the performance analysis of our Python samples, we expect the production- and pipeline-level impact to be negligible. CUDA kernel and C++ call performance is not affected. We aim to investigate and reduce this overhead further in a future release.​
