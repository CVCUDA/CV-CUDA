
.. _program_listing_file_nvcv_types_include_nvcv_ArrayData.h:

Program Listing for File ArrayData.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file_nvcv_types_include_nvcv_ArrayData.h>` (``nvcv_types/include/nvcv/ArrayData.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * SPDX-FileCopyrightText: Copyright (c) 2022-2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
    * SPDX-License-Identifier: Apache-2.0
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */
   
   #ifndef NVCV_ARRAYDATA_H
   #define NVCV_ARRAYDATA_H
   
   #include <nvcv/ImageFormat.h>
   
   #ifdef __cplusplus
   extern "C"
   {
   #endif
   
   typedef struct NVCVArrayBufferStridedRec
   {
       int64_t stride;
   
       NVCVByte *basePtr;
   } NVCVArrayBufferStrided;
   
   typedef enum
   {
       NVCV_ARRAY_BUFFER_NONE = 0,
   
       NVCV_ARRAY_BUFFER_CUDA        = 0x11, /* 0001_0001 */
       NVCV_ARRAY_BUFFER_HOST        = 0x24, /* 0010_0100 */
       NVCV_ARRAY_BUFFER_HOST_PINNED = 0x28, /* 0010_1000 */
   } NVCVArrayBufferType;
   
   typedef union NVCVArrayBufferRec
   {
       NVCVArrayBufferStrided strided;
   } NVCVArrayBuffer;
   
   typedef struct NVCVArrayDataRec
   {
       NVCVDataType dtype;
   
       int64_t length;
       int64_t capacity;
   
       NVCVArrayBufferType bufferType;
   
       NVCVArrayBuffer buffer;
   } NVCVArrayData;
   
   #ifdef __cplusplus
   }
   #endif
   
   #endif // NVCV_ARRAYDATA_H
