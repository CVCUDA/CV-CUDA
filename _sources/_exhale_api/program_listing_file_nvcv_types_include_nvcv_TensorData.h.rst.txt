
.. _program_listing_file_nvcv_types_include_nvcv_TensorData.h:

Program Listing for File TensorData.h
=====================================

|exhale_lsh| :ref:`Return to documentation for file <file_nvcv_types_include_nvcv_TensorData.h>` (``nvcv_types/include/nvcv/TensorData.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * SPDX-FileCopyrightText: Copyright (c) 2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
    * SPDX-License-Identifier: Apache-2.0
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */
   
   #ifndef NVCV_TENSORDATA_H
   #define NVCV_TENSORDATA_H
   
   #include "TensorLayout.h"
   
   #include <nvcv/ImageFormat.h>
   
   #ifdef __cplusplus
   extern "C"
   {
   #endif
   
   typedef struct NVCVTensorBufferStridedRec
   {
       int64_t strides[NVCV_TENSOR_MAX_RANK];
   
       NVCVByte *basePtr;
   } NVCVTensorBufferStrided;
   
   typedef enum
   {
       NVCV_TENSOR_BUFFER_NONE = 0,
   
       NVCV_TENSOR_BUFFER_STRIDED_CUDA,
   } NVCVTensorBufferType;
   
   typedef union NVCVTensorBufferRec
   {
       NVCVTensorBufferStrided strided;
   } NVCVTensorBuffer;
   
   typedef struct NVCVTensorDataRec
   {
       NVCVDataType     dtype;
       NVCVTensorLayout layout;
   
       int32_t rank;
       int64_t shape[NVCV_TENSOR_MAX_RANK];
   
       NVCVTensorBufferType bufferType;
   
       NVCVTensorBuffer buffer;
   } NVCVTensorData;
   
   #ifdef __cplusplus
   }
   #endif
   
   #endif // NVCV_TENSORDATA_H
